# -*- coding: utf-8 -*-

# Created on 2017-08-04 12:35
# @author Sergii Panchenko

# You are going to be given an array of integers. 
# Your job is to take that array and find an index N 
# where the sum of the integers to the left of N 
# is equal to the sum of the integers to the right of N. 
# If there is no index that would make this happen, return -1.

def find_even_index(arr):
    #your code here
    for i in range(len(arr)):
        if sum(arr[:i]) == sum(arr[i+1:]):
            return i
    return -1
    
# testCase
print(find_even_index([1,2,3,4,3,2,1]))                 #3
print(find_even_index([1,100,50,-51,1,1]))              #1
print(find_even_index([1,2,3,4,5,6]))                   #-1
print(find_even_index([20,10,30,10,10,15,35]))          #3
print(find_even_index([20,10,-80,10,10,15,35]))         #0
print(find_even_index([10,-80,10,10,15,35,20]))         #6
print(find_even_index(range(1,100)))                    #-1
print(find_even_index([0,0,0,0,0]))                     #0 -Should pick the first index if more cases are valid
print(find_even_index([-1,-2,-3,-4,-3,-2,-1]))          #3
print(find_even_index(range(-100,-1)))                  #-1

# Time: 127ms Passed: 10 Failed: 0
